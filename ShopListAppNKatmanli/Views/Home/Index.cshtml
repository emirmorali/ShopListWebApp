@using EntityLayer.DTOs;
@using Newtonsoft.Json;
@inject IConfiguration _configuration


@{
    Layout = "~/Views/Shared/Layout.cshtml";
    string apiUrl = _configuration["MyConfigurations:MyApiUrl"];
    decimal discountedPrice = 0;
}


<div class="container-fluid mb-5">
    <div class="row border-top px-xl-5">
        <div class="col-lg-3 d-none d-lg-block">
        </div>
        <div class="col-lg-9">

            <div id="header-carousel" class="carousel slide" data-ride="carousel">
                <div class="carousel-inner">
                    <div class="carousel-item active" style="height: 410px;">
                        <a href="/Shop/Index?discount=true" target="_blank"><img class="img-fluid" src="https://i.hizliresim.com/3chy9u0.png" alt="Image"></a>

                    </div>
                    <div class="carousel-item" style="height: 410px;">
                        <a href="/Shop/Index?discount=true" target="_blank"><img class="img-fluid" src="https://i.hizliresim.com/lk7grtz.png" alt="Image"></a>
                    </div>

                </div>
                <a class="carousel-control-prev" href="#header-carousel" data-slide="prev">
                    <div class="btn btn-dark" style="width: 45px; height: 45px;">
                        <span class="carousel-control-prev-icon mb-n2"></span>
                    </div>
                </a>
                <a class="carousel-control-next" href="#header-carousel" data-slide="next">
                    <div class="btn btn-dark" style="width: 45px; height: 45px;">
                        <span class="carousel-control-next-icon mb-n2"></span>
                    </div>
                </a>
            </div>
        </div>
    </div>
</div>
<!-- Featured Start -->
<div class="container-fluid pt-5">
    <div class="row px-xl-5 pb-3">
        <div class="col-lg-3 col-md-6 col-sm-12 pb-1">
            <div class="d-flex align-items-center border mb-4" style="padding: 30px;">
                <h1 class="fa fa-check text-primary m-0 mr-3"></h1>
                <h5 class="font-weight-semi-bold m-0">Quality Product</h5>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-12 pb-1">
            <div class="d-flex align-items-center border mb-4" style="padding: 30px;">
                <h1 class="fa fa-shipping-fast text-primary m-0 mr-2"></h1>
                <h5 class="font-weight-semi-bold m-0">Free Shipping</h5>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-12 pb-1">
            <div class="d-flex align-items-center border mb-4" style="padding: 30px;">
                <h1 class="fas fa-exchange-alt text-primary m-0 mr-3"></h1>
                <h5 class="font-weight-semi-bold m-0">14-Day Return</h5>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-12 pb-1">
            <div class="d-flex align-items-center border mb-4" style="padding: 30px;">
                <h1 class="fa fa-phone-volume text-primary m-0 mr-3"></h1>
                <h5 class="font-weight-semi-bold m-0">24/7 Support</h5>
            </div>
        </div>
    </div>
</div>
<!-- Featured End -->
<!-- Categories Start -->
<div class="container-fluid pt-5">
    <div class="row px-xl-5 pb-3">
        @{
            var httpClient = new HttpClient();
            var response = await httpClient.GetAsync(apiUrl + "CategoryDetails");
            var content = await response.Content.ReadAsStringAsync();
            List<GetCategoryDetailDTO> categoryDetails = JsonConvert.DeserializeObject<List<GetCategoryDetailDTO>>(content);

            Random rng = new Random();
            List<GetCategoryDetailDTO> shuffledList = categoryDetails.OrderBy(item => rng.Next()).ToList();
            List<GetCategoryDetailDTO> random12Elements = shuffledList.Take(12).ToList();


            foreach (var categoryDetail in random12Elements)
            {
                <div class="col-lg-4 col-md-6 pb-1">
                    <div class="cat-item d-flex flex-column border mb-4" style="padding: 30px;">
                        <a href="/Shop/Index/?categoryDetail=@categoryDetail.Id" class="position-relative overflow-hidden mb-3">
                            <h5 class="font-weight-semi-bold m-0">@categoryDetail.Name</h5>
                        </a>
                    </div>
                </div>
            }

        }
    </div>
</div>
<!-- Categories End -->
<!-- Offer Start -->
<div class="container-fluid offer pt-5">
    <div class="row px-xl-5">
        <div class="col-md-6 pb-4">
            <div class="position-relative bg-secondary text-center text-md-right text-white mb-2 py-5 px-5">
                <img src="img/offer-1.png" alt="">
                <div class="position-relative" style="z-index: 1;">
                    <h5 class="text-uppercase text-primary mb-3">20% off the all order</h5>
                    <h1 class="mb-4 font-weight-semi-bold">Spring Collection</h1>
                    <a href="/Shop/Index?discount=true" class="btn btn-outline-primary py-md-2 px-md-3">Shop Now</a>
                </div>
            </div>
        </div>
        <div class="col-md-6 pb-4">
            <div class="position-relative bg-secondary text-center text-md-left text-white mb-2 py-5 px-5">
                <img src="img/offer-2.png" alt="">
                <div class="position-relative" style="z-index: 1;">
                    <h5 class="text-uppercase text-primary mb-3">20% off the all order</h5>
                    <h1 class="mb-4 font-weight-semi-bold">Winter Collection</h1>
                    <a href="/Shop/Index?discount=true" class="btn btn-outline-primary py-md-2 px-md-3">Shop Now</a>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Offer End -->
<!-- Products Start -->
<div class="container-fluid pt-5">
    <div class="text-center mb-4">
        <h2 class="section-title px-5"><span class="px-2">Trendy Products</span></h2>
    </div>
    <div class="col-md-12">
        <div class="row pb-3">
            <div class="col-12 pb-1">
                <div class="d-flex align-items-center justify-content-between mb-4">
                    <div class="input-group">
                    </div>
                </div>
            </div>

            @*Item Carts Section*@

            @foreach (var item in Model.TrendyItems)
            {
                <div class="col-lg-3 col-md-6 col-sm-12 pb-1">
                    <div class="card product-item border-0 mb-4">
                        <div class="card-header product-img position-relative overflow-hidden bg-transparent border p-0" style="height:400px">
                            <a href="/Shop/GetItemDetail/@item.Id">
                                <img class="w-100 " src=@item.Image alt="" style="object-fit:cover">
                            </a>
                        </div>
                        <div class="card-body border-left border-right text-center p-0 pt-4 pb-3">
                            <h6 class="text-truncate mb-3">@item.Title</h6>
                            <div class="d-flex justify-content-center">
                                @{
                                    discountedPrice = item.Price * (100 - item.Discount) / 100;
                                    if (item.Discount > 0)
                                    {
                                        <h6 class="numberWithCommas">@discountedPrice TL</h6>
                                        <h6 class="text-muted ml-2"><del>@item.Price TL</del></h6>
                                    }
                                    else
                                    {
                                        <h6 class="numberWithCommas">@item.Price TL</h6>
                                    }
                                }
                            </div>
                        </div>
                        <div class="card-footer d-flex justify-content-between bg-light border">
                            <a href="/Shop/GetItemDetail/@item.Id" class="btn btn-sm text-dark p-0"><i class="fas fa-eye text-primary mr-1"></i>View Detail</a>
                            <a href="/Shop/AddOrderDetailIndex/@item.Id" class="btn btn-sm text-dark p-0"><i class="fas fa-shopping-cart text-primary mr-1"></i>Add To Cart</a>
                            @{
                                var httpClient4 = new HttpClient();
                                var response4 = await httpClient4.GetAsync(apiUrl + "FavoriteItemUsers");
                                if (Context.User.Identity.IsAuthenticated)
                                {
                                    int userId = int.Parse(Context.Request.Cookies["UserID"]);

                                    bool IsFavorite = false;

                                    if (response4.IsSuccessStatusCode)
                                    {
                                        var content4 = await response4.Content.ReadAsStringAsync();
                                        List<GetFavoriteItemUserDTO> favoriteItemUserList = JsonConvert.DeserializeObject<List<GetFavoriteItemUserDTO>>(content4);

                                        List<GetFavoriteItemUserDTO> favoriteItemUsersWithUserId = favoriteItemUserList.Where(
                                        favoriteItemUser => favoriteItemUser.UserId == userId && favoriteItemUser.ItemId == item.Id).ToList();



                                        if (favoriteItemUsersWithUserId.Count == 1)
                                        {
                                            <a href="/FavoriteItemUser/DeleteFavoriteItemUserHome?itemId=@item.Id" class="text-right"><i class="fas fa-heart text-body"></i></a>
                                        }
                                        else
                                        {
                                            <a href="/FavoriteItemUser/AddFavoriteItemUserHome?itemId=@item.Id" class="text-right"><i class="fas fa-heart text-primary"></i></a>
                                        }

                                    }
                                }

                            }
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>

</div>
<!-- Products End -->
<!-- Subscribe Start -->
@*<div class="container-fluid bg-secondary my-5">
    <div class="row justify-content-md-center py-5 px-xl-5">
        <div class="col-md-6 col-12 py-5">
            <div class="text-center mb-2 pb-2">
                <h2 class="section-title px-5 mb-3"><span class="bg-secondary px-2">Stay Updated</span></h2>
                <p>Amet lorem at rebum amet dolores. Elitr lorem dolor sed amet diam labore at justo ipsum eirmod duo labore labore.</p>
            </div>
            <form action="">
                <div class="input-group">
                    <input type="text" class="form-control border-white p-4" placeholder="Email Goes Here">
                    <div class="input-group-append">
                        <button class="btn btn-primary px-4">Subscribe</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>*@
<!-- Subscribe End -->
<!-- Products Start -->
<div class="container-fluid pt-5">
    <div class="text-center mb-4">
        <h2 class="section-title px-5"><span class="px-2">Just Arrived</span></h2>
    </div>
    <div class="col-md-12">
        <div class="row pb-3">
            <div class="col-12 pb-1">
                <div class="d-flex align-items-center justify-content-between mb-4">
                    <div class="input-group">
                    </div>
                </div>
            </div>

            @*Item Carts Section*@

            @foreach (var item in Model.LatestItems)
            {
                <div class="col-lg-3 col-md-6 col-sm-12 pb-1">
                    <div class="card product-item border-0 mb-4">
                        <div class="card-header product-img position-relative overflow-hidden bg-transparent border p-0" style="height:400px">
                            <a href="/Shop/GetItemDetail/@item.Id">
                                <img class="w-100 " src=@item.Image alt="" style="object-fit:cover">
                            </a>
                        </div>
                        <div class="card-body border-left border-right text-center p-0 pt-4 pb-3">
                            <h6 class="text-truncate mb-3">@item.Title</h6>
                            <div class="d-flex justify-content-center">
                                <h6 class="numberWithCommas">@item.Price TL</h6> @*<h6 class="text-muted ml-2"><del>@item.Price</del></h6> // This part is for discounted price*@
                            </div>
                        </div>
                        <div class="card-footer d-flex justify-content-between bg-light border">
                            <a href="/Shop/GetItemDetail/@item.Id" class="btn btn-sm text-dark p-0"><i class="fas fa-eye text-primary mr-1"></i>View Detail</a>
                            <a href="/Shop/AddOrderDetailIndex/@item.Id" class="btn btn-sm text-dark p-0"><i class="fas fa-shopping-cart text-primary mr-1"></i>Add To Cart</a>
                            @{
                                var httpClient4 = new HttpClient();
                                var response4 = await httpClient4.GetAsync(apiUrl + "FavoriteItemUsers");
                                if (Context.User.Identity.IsAuthenticated)
                                {
                                    int userId = int.Parse(Context.Request.Cookies["UserID"]);

                                    bool IsFavorite = false;

                                    if (response4.IsSuccessStatusCode)
                                    {
                                        var content4 = await response4.Content.ReadAsStringAsync();
                                        List<GetFavoriteItemUserDTO> favoriteItemUserList = JsonConvert.DeserializeObject<List<GetFavoriteItemUserDTO>>(content4);

                                        List<GetFavoriteItemUserDTO> favoriteItemUsersWithUserId = favoriteItemUserList.Where(
                                        favoriteItemUser => favoriteItemUser.UserId == userId && favoriteItemUser.ItemId == item.Id).ToList();



                                        if (favoriteItemUsersWithUserId.Count == 1)
                                        {
                                            <a href="/FavoriteItemUser/DeleteFavoriteItemUserHome?itemId=@item.Id" class="text-right"><i class="fas fa-heart text-body"></i></a>
                                        }
                                        else
                                        {
                                            <a href="/FavoriteItemUser/AddFavoriteItemUserHome?itemId=@item.Id" class="text-right"><i class="fas fa-heart text-primary"></i></a>
                                        }

                                    }
                                }

                            }
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
</div>

<script type="text/javascript">
    jQuery(document).ready(function () {
        function numberWithCommas(price) {
            price = price.toString().replace(".", ',');
            return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, '.');
        }

        $(".numberWithCommas").each(function () {
            var originalPrice = $(this).text();
            var formattedPrice = numberWithCommas(originalPrice);
            $(this).text(formattedPrice);
        });
    });
</script>