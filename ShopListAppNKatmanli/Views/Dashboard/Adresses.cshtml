@using EntityLayer.DTOs

@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<GetAddressDTO>
@{
    ViewData["Title"] = "Adresses";
    Layout = "~/Views/Shared/DashboardLayout.cshtml";
}


<table class="table table-bordered">
    <thead class="thead-dark">
        <tr>
            <th scope="col">#</th>
            <th scope="col">Address Name</th>
            <th scope="col">Country</th>
            <th scope="col">City</th>
            <th scope="col">Town</th>
            <th scope="col">Options</th>
        </tr>
    </thead>
    <tbody>


        @foreach (var item in Model)
            {

                <tr>
                    <th scope="row">@item.Id</th>
                    <td>@item.AddressName</td>
                    <td>@item.CountryName</td>
                    <td>@item.CityName</td>
                    <td>@item.TownName</td>
                    <td>

                        <a href="/Dashboard/GetAddressDetail/@item.Id" class="btn" style="background-color: #58f13a;">Detail</a>-
                        <a href="/Dashboard/GetAddress/@item.Id" class="btn btn-primary">Update</a>-
                        <a href="/Dashboard/DeleteAddress/@item.Id" class="btn btn-danger" >Delete</a>
                    </td>
                </tr>
            }

    </tbody>
</table>
    @Html.PagedListPager((IPagedList)Model,page=>Url.Action("Adresses",new {page}))
    <a type="button" style="background-color:#4d056e;color: #fff;" class="btn" href="/Dashboard/AddAddresses">
        New Addresses
    </a>
             
           
            

@await Component.InvokeAsync("NToastNotify") @*toast*@
